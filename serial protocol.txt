*) All lines ends with "\n" or "\r" or "\n\r" or "\r\n", tbd
*) all commands and file names are case insesitive
*) serial baudrate 115200 bit/sec or more
*) all files ar in DOS format 8.3 - File name max 8 char, extension 3 char
	uppercase or lovercase chars (automaticaly transformed to uppercase) A-Z, a-z
	all file name return are in uppercase only
	numbers 0-9
	Simbols ! # $ % & ' ( ) - @ ^ _ ` { } ~ are allowed, but not recomended
	All others chars are banned
	Directories are not allowed
	maximum files in direcory: less than 512
	All files are stored in /SDcard/LOADCELL directory
	Optional extension: web page files for ESP are stored in /SDcard/WEB folder

*) From ESP (web,serial) to propeller
LIST - list files
		repelay from propeller
		"LIST 2"
		"file1.txt"
		"file2.txt" where:
				L - answer to list coomand
				2 - number of lines(files) in replay
DEL file1.txt - delete file
		replay from propeller
		"DEL file.txt" or "DEL error: no file" or "DEL error: SD failed"
CAT file1.txt - cat (list) file contents
		replay from propeller
		"CAT 12345" or "CAT error: no file" or "CAT error: SD failed"
		12345 - file size
		
TIME 2017-02-17 14:02:00 0 - set time and date
		replay from propeller
		TIME 2017-02-17 14:02:00 0 or "TIME error: incorrect date"
						last digit (0-6 or 1-7, tbd) day of week
		if no parameter, than propeller return local time
		TIME 2017-02-17 14:02:00 0


*) From propeller to ESP (Web, serial)
Rxxxxyyyy - realtime data return			
			xxxx - number of sample since log started (0-9999)
			yyyy - value (0000 to 9999)			
			example R99991234 - sample: 9999 value: 1234
			will start to send automatically after rocket motor launch
			ESP must get all these data and covert to XML/jSon/CSV and send to web page near real time

Syyyy - current sensor value while in standby
			yyyy - value (0000 to 9999)			
			will send 1000 times per second while in standby
			example S1234
			ESP sometimes (5x per second) must read last value and sent to web page for user to see sensor status in near real time
